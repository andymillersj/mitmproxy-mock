{
  "request":{
    "/test":{
      "respond":{
        "type": "text/html",
        "content": "<body><h1>TEST</h1></body>"
      }
    },
    "/file":{
      "respond":{
        "content": "./example.json"
      }
    },
    "/object":{
      "respond":{
        "content": {
          "embedded":{
            "json": [ "object "]
          }
        }
      }
    },
    "/once":{
      "once":{
        "respond":{
          "status": 200,
          "content": "<body><h1>Once</h1><p>Reload and this page will be gone.</p></body>"
        }
      }
    },
    "/cycle":{
      "cycle":[
        { "respond": "<body><h1>A</h1></body>" },
        { "respond": "<body><h1>B</h1></body>" },
        { "respond": "<body><h1>C</h1></body>" }
      ]
    },
    "/pass":{
      "pass": true,
      "respond": "<blink>This text won't be seen, pass forwards to server</blink>"
    },
    "/sequence":{
      "count":{
        "1":{ "respond": "<h1>1</h1>" },
        "2":{ "respond": "<h1>2</h1>" },
        "3":{ "respond": "<h1>3</h1>" },
        "7":{ "respond": "<h1>7</h1>" },
        "~":{ "pass": true }
      }
    },
    "/count":{
      "count":{
        "1": {
          "respond": {
            "content": "<body><h1>1</h1><p>You have loaded this page once.</p></body>",
            "status": 418
          },
          "cycle": {}
        },
        "2": {
          "respond": "<body><h1>2</h1><p>You have loaded this page two times.</p></body>",
          "cycle": {}
        },
        "5": {
          "respond": "<body><h1>5</h1><p>You have loaded this page five times.</p></body>",
          "cycle": {}
        },
        "even": {
          "cycle-id": "even_count",
          "cycle":[
            { "respond": "<body><h1>Even</h1><p>You have loaded this page an even number of times.</p></body>" },
            { "respond": "<body><h1>even</h1><p>You have loaded this page an even number of times.</p></body>" }
          ]
        },
        "odd":{
          "cycle-id": "odd_count",
          "cycle":[
            { "respond": "<body><h1>Odd</h1><p>You have loaded this page an odd number of times.</p></body>" },
            { "respond": "<body><h1>odd</h1><p>You have loaded this page an odd number of times.</p></body>" }
          ]
        }
      }
    },
    "/foo":[
      {
        "query": { "q": "foo" },
        "respond": "<body><h1>FOO</h1></body>"
      },
      {
        "query": { "q": "~ba[rz]" },
        "count":{
          "id": "barbaz",
          "even":{ "respond": "<body><h1>Baz</h1></body>" },
          "odd":{ "respond": "<body><h1>Bar</h1></body>" }
        }
      },
      {
        "count":{
          "id": "foobar",
          "1":{ "respond": "<body><h1>Foo</h1></body>" },
          "2":{ "respond": "<body><h1>Bar</h1></body>" },
          "3":{ "respond": "<body><h1>Baz</h1></body>" },
          "*":{ "respond": "<body><h1>Foobar</h1></body>" }
        }
      }
    ],
    "/flip":{
      "random":[
        { "respond": "<body><h1>Heads</h1></body>" },
        { "respond": "<body><h1>Tails</h1></body>" }
      ]
    },
    "/unreliable":{
      "random":[
        {}, {},
        {
          "respond": {
            "status": 500,
            "content": "<h1>500 - Random Error</h1>"
          },
          "pass": false
        }
      ],
      "pass": true
    },
    "/google":{
      "modify":{
        "host": "www.google.com",
        "path": "/",
        "query":{ "q": "mitmproxy" }
      }
    },
    "~^/ba(|.)$":{
      "respond": "<body><h1>Ba</h1><p>Regex match on path.</p></body>"
    },
    "*":{
      "host":[
        ".com",
        "arkku.dev"
      ]
    }
  },
  "response":{
    "/nonexistent":{
      "status": 404,
      "replace":{
        "status": 200,
        "content": "./example.json",
        "type": "application/json"
      }
    },
    "/foo.json":{
      "status": 200,
      "content":{
        "foo": "~[Oo]+$",
        "bar": 42,
        "array":[ { "id": 1 } ]
      },
      "modify":[
        "|bar|BAR",
        {
          "merge":{
            "mock": "inserted item",
            "baz": "replaced item",
            "array":[ { "id": 666, "note": "added element", "foo": false } ],
            "inserted_array":[]
          }
        },
        {
          "delete":{
            "foo": {},
            "array":[ { "id": 0 } ]
          }
        },
        {
          "merge":{
            "array":{
              "where": { "foo": true },
              "merge": { "foo": false, "foo_replaced": true },
              "forall": false
            }
          }
        },
        {
          "merge":{
            "array":{
              "where": { "id": 3 },
              "replace": { "id": 3, "foo": false, "note": "replaced element" },
              "move": "tail"
            }
          }
        },
        {
          "merge":{
            "array":{
              "where":{ "id": 666 },
              "move": "head"
            }
          }
        },
        {
          "replace":{
            "other_array": [
              { "id": "e", "note": "only element after replace" }
            ]
          }
        }
        ]
    },
    "/pass":{
      "pass": true
    },
    "~":[
      {
        "status": 404,
        "replace":{
          "content": "<body><h1>404 - Not Found</h1><p>Custom error.</p></body>"
        }
      }
    ],
    "*":{
      "host":[
        ".com"
      ]
    }
  },
  "charset": "utf-8"
}
